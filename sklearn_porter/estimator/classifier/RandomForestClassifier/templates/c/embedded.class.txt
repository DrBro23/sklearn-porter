#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <pico/stdlib.h>

const uint LED_PIN = 25;

{method}

void clrbuf(uint8_t* buf, size_t len) {{
    for(size_t i = 0; i < len; i++) {{
        buf[i] = '\0';
    }}
}}

void getInputsFromUser(double nums[], int count)   {{
    const int BUFFER_LEN = 256;
    char c;
    char buffer[BUFFER_LEN];
    char parseBuffer[BUFFER_LEN];
    int idx = 0;
    int numFloats = 0;
    double f = 0.0F;

    clrbuf(buffer, BUFFER_LEN);

    // flush stdin
    while(getchar_timeout_us(100) != PICO_ERROR_TIMEOUT);

    while(1)    {{
        c = getchar(); // read from user
        // printf("%c", c);    // echo input

        if(idx >= BUFFER_LEN)    {{
            c = ' ';    // abort
        }}

        if(c == '\r')    {{
            numFloats++;

            // convert number
            char* start = parseBuffer;
            strncpy(parseBuffer, buffer, BUFFER_LEN);

            for(int i = 0; i < numFloats; i++)  {{
                char* end = memchr(start, ' ', BUFFER_LEN);
                if(end == NULL) {{
                    end = parseBuffer + BUFFER_LEN;
                }}

                int len = end - start;
                strncpy(parseBuffer, start, len);

                nums[i] = atof(parseBuffer);
                start = end + 1;
            }}
            return;

        }}   else if(c == ' ')   {{
            numFloats++;
            buffer[idx++] = c;
        }}   else if(c == 127 || c == 8)    {{
            --idx; // backspace or delete
            // printf("\b");
        }}   else    {{
            // append input to buffer
            buffer[idx++] = c;
        }}
    }}
}}


int main() {{
    stdio_init_all();

    gpio_init(LED_PIN);
    gpio_set_dir(LED_PIN, GPIO_OUT);

    double features[4];
    // double features[argc-1];

    int i;
    
    while(1)
    {{
        gpio_put(LED_PIN, 1);

        getInputsFromUser(features, 4);
        int prediction = predict(features);
        printf("%d\n", prediction);
        
        gpio_put(LED_PIN, 0);
    }}
    return 0;
}}
